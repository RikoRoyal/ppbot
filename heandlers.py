import hashlib
import logging
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove, KeyboardButton, \
    ReplyKeyboardMarkup
from aiogram.utils.callback_data import CallbackData
from aiogram.utils.exceptions import MessageNotModified
from main import bot, dp
from aiogram.types import Message, InputMediaPhoto, InputTextMessageContent, InlineQueryResultArticle, ChatActions
from aiogram import types, Dispatcher
from config import admins, not_sub_message, BOT_NICKNAME
import markups as nav
from db import DataBase
import asyncio
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
import admin, mail
import random

db = DataBase('db.db')

class viv_bal(StatesGroup):
    amounts = State()
    wallet = State()

async def send_to_admin(dp):
    try:
        i = 0
        for i in range(len(admins)):
            await bot.send_message(chat_id=admins[i], text='‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    except Exception as e:
        pass

async def check_sub_channels(channels, user_id):
    channels = db.channels_get()
    for channel in channels:
        chat_member = await bot.get_chat_member(chat_id=channel[1], user_id=user_id)
        if chat_member['status'] == 'left':
            return False
    return True

@dp.message_handler(commands=['start'])
async def starting(message: Message):
    if message.chat.type == 'private':
        if not db.user_exists(message.from_user.id):
            start_command = message.text
            referer_id = str(start_command[7:])
            if str(referer_id) != "":
                if str(referer_id) != str(message.from_user.id):
                    db.add_user(message.from_user.id, referer_id)
                    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç <b>' + message.from_user.username + '</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã')
                    await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
                    await asyncio.sleep(2.5)
                    await bot.send_message(message.from_user.id, '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>500‚ÇΩ</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ')
                    await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
                    await asyncio.sleep(4.5)
                    img = open('1.gif', 'rb')
                    await bot.send_animation(message.from_user.id, img, None,  caption='<b>–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—á–∏—Å–ª–∏–ª–∏ –í–∞–º –±–æ–Ω—É—Å üòå</b>\n\nü§ö–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–∞–º –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ 2 –∫–∞–Ω–∞–ª–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞üëáüèª‚ú®', reply_markup=nav.showChannels())
                    try:
                        balance = db.get_balance_ref(referer_id)[0]
                        edit_balance = int(balance) + int(admin.updateConfig())
                        db.edit_balance_ref(edit_balance, referer_id)
                        balance = db.get_balance(message.from_user.id)[0]
                        edit_balance = int(balance) + 500
                        db.edit_balance(edit_balance, message.from_user.id)
                        await bot.send_message(referer_id, "üéÅ –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! –í–∞–º –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {0}—Ä –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –≤–∞–º–∏ –¥—Ä—É–≥–∞)".format(admin.updateConfig()))
                    except Exception as e:
                        pass
                else:
                    db.add_user(message.from_user.id)
                    balance = db.get_balance(message.from_user.id)[0]
                    edit_balance = int(balance) + 500
                    db.edit_balance(edit_balance, message.from_user.id)
                    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç <b>' + message.from_user.username + '</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã')
                    await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
                    await asyncio.sleep(2.5)
                    await bot.send_message(message.from_user.id, '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>500‚ÇΩ</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ')
                    await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
                    await asyncio.sleep(4.5)
                    img = open('1.gif', 'rb')
                    await bot.send_animation(message.from_user.id, img, None,  caption='<b>–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—á–∏—Å–ª–∏–ª–∏ –í–∞–º –±–æ–Ω—É—Å üòå</b>\n\nü§ö–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–∞–º –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ 2 –∫–∞–Ω–∞–ª–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞üëáüèª‚ú®', reply_markup=nav.showChannels())
            else:
                db.add_user(message.from_user.id)
                balance = db.get_balance(message.from_user.id)[0]
                edit_balance = int(balance) + 500
                db.edit_balance(edit_balance, message.from_user.id)
                await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç <b>' + message.from_user.username + '</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã')
                await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
                await asyncio.sleep(2.5)
                await bot.send_message(message.from_user.id, '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>500‚ÇΩ</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ')
                await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
                await asyncio.sleep(4.5)
                img = open('1.gif', 'rb')
                await bot.send_animation(message.from_user.id, img, None,  caption='<b>–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—á–∏—Å–ª–∏–ª–∏ –í–∞–º –±–æ–Ω—É—Å üòå</b>\n\nü§ö–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–∞–º –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ 2 –∫–∞–Ω–∞–ª–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞üëáüèª‚ú®', reply_markup=nav.showChannels())
        else:
            await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç <b>' + message.from_user.username + '</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2.5)
            await bot.send_message(message.from_user.id, '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>500‚ÇΩ</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(4.5)
            img = open('1.gif', 'rb')
            await bot.send_animation(message.from_user.id, img, None,  caption='<b>–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—á–∏—Å–ª–∏–ª–∏ –í–∞–º –±–æ–Ω—É—Å üòå</b>\n\nü§ö–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–∞–º –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ 2 –∫–∞–Ω–∞–ª–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞üëáüèª‚ú®', reply_markup=nav.showChannels())

@dp.callback_query_handler(text_contains='subchannelDone')
async def subchannelDone(call: types.CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    channels = db.channels_get()
    if await check_sub_channels(channels, call.from_user.id):
        img = open('1.jpg', 'rb')
        await bot.send_chat_action(call.from_user.id, ChatActions.TYPING)
        await asyncio.sleep(2)
        await bot.send_sticker(call.from_user.id, 'CAACAgIAAxkBAAEG30djnoMDD-09wYE2FBDYJ28xgwWugQAC1QUAAj-VzAr0FV2u85b8KCwE', reply_markup=nav.greet_kb)
        await bot.send_photo(call.from_user.id, img, caption='<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Ü–µ–Ω–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤</b>\n\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫, –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ—Ä–æ–±–æ—á–∫—É Mystery Box', reply_markup=nav.showCC())
    else:
        await call.answer(text=not_sub_message, show_alert=True)
        await bot.send_message(call.from_user.id, 'üìù <b>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã:</b>', reply_markup=nav.showChannels())

@dp.callback_query_handler(text_contains='box', state=None)
async def geolocat(call: types.CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    if call.data.split("_")[0] == 'box':
        id = call.data.split("_")[1]
        ccs = db.cc_result(id)
        for cc in ccs:
            keyboard = InlineKeyboardMarkup(row_width=1)
            btn = InlineKeyboardButton(text="üéÅ –ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫", url=cc[4])
            btnDoneSub = InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="returnhome")
            keyboard.insert(btn)
            keyboard.insert(btnDoneSub)
            await bot.send_chat_action(call.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_photo(call.from_user.id, cc[1], caption=cc[2] + "\n\n" + cc[3], reply_markup=keyboard)

@dp.callback_query_handler(text_contains='returnhome', state=None)
async def geolocat(call: types.CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    if call.data == 'returnhome':
        img = open('1.jpg', 'rb')
        await bot.send_chat_action(call.from_user.id, ChatActions.TYPING)
        await asyncio.sleep(2)
        await bot.send_photo(call.from_user.id, img, caption='<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Ü–µ–Ω–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤</b>\n\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫, –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ—Ä–æ–±–æ—á–∫—É Mystery Box', reply_markup=nav.showCC())

@dp.callback_query_handler(text_contains='bal', state=None)
async def geolocat(call: types.CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    if call.data == 'bal_1':
        await bot.send_message(call.from_user.id,'‚úÖ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏:\n–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel')
        await viv_bal.amounts.set()

@dp.message_handler(content_types=['text'], state=viv_bal.amounts)
async def load_text(message: types.Message, state:FSMContext):
    balance = db.get_balance(message.from_user.id)[0]
    amounts = message.text
    await state.update_data({'amounts': amounts})
    try:
        if type(int(amounts)) == int:
            if int(amounts) <= balance and int(amounts) >= admin.updateConfigOne():
                await bot.send_message(message.from_user.id, 'üöÄ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ QIWI –∏–ª–∏ Yoomoney –∏–ª–∏ –∂–µ Payeer')
                await viv_bal.next()
            else:
                await bot.send_message(message.from_user.id, 'üöÄ –û—à–∏–±–∫–∞! –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥ {0} —Ä—É–±–ª–µ–π'.format(admin.updateConfigOne()))
                await state.finish()
    except Exception as e:
        await bot.send_message(message.from_user.id, '<b>–í—ã –≤–≤–µ–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</b>.\n<b>–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —Å–Ω–æ–≤–∞.</b>',
                               parse_mode='HTML')
        await state.finish()
        print(e)

@dp.message_handler(state=viv_bal.wallet)
async def load_user_id(message: types.Message, state: FSMContext):
    wallet = message.text
    amounts = await state.get_data('amounts')
    amounts = amounts.get('amounts')
    db.add_output(message.from_user.id, amounts, wallet)
    await bot.send_message(message.from_user.id, 'üéÅ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É –±—ã–ª–∞ <b>—É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞</b>! –û–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ <b>48-—á–∞—Å–æ–≤</b>')
    try:
        balance = db.get_balance(message.from_user.id)[0]
        db.edit_balance(balance-int(amounts),message.from_user.id)
        statsv = db.get_vipl()[0]
        db.edit_vipl(statsv+int(amounts))
        await state.finish()
    except Exception as e:
        await state.finish()
        print(e)

@dp.message_handler(content_types=['text'], state=None)
async def text_menu(message: Message):
    if message.chat.type == 'private':
        if message.text == 'üë• –†–µ—Ñ–µ—Ä–∞–ª—ã':
            count_refc = db.count_referes(message.from_user.id)[0]
            await bot.send_message(message.from_user.id, '<b>üë• –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ üë•</b>\n\nüë§ –í–∞—à–∏ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ: <b>{0}</b>\n\nüîó –í–∞—à–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/{1}?start={2}\n\nü§ù –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ <b>–¥—Ä—É–∑–µ–π</b> –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–≥–æ <b>{3} —Ä—É–±–ª–µ–π</b>.'.format(count_refc, BOT_NICKNAME,message.from_user.id, admin.updateConfig()), disable_web_page_preview=True)
        if message.text == 'üí≥ –ë–∞–ª–∞–Ω—Å':
            user_id = message.from_user.id
            balance = db.get_balance(message.from_user.id)[0]
            await bot.send_message(message.from_user.id, 'üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{0}‚ÇΩ</b>'.format(balance), reply_markup=nav.balanceMenu)
        if message.text == 'üîë –û–±—É—á–µ–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∫—É':
            img = open('2.jpg', 'rb')
            await bot.send_sticker(message.from_user.id, 'CAACAgIAAxkBAAEG-7BjpuryGXP9q3P7deuCj_qshxYb3QACAQADFm5MEh97vwZE6duLLAQ')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç <b>' + message.from_user.username + '</b>, —è –ß–∞—Ç–∏–∫—Å –∏ —è –ø—Ä–æ–≤–µ–¥—É —Ç–µ–±—è –≤ –º–∏—Ä —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ ‚úÖ —Å <b>–ì–ê–†–ê–ù–¢–ò–ï–ô —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!</b>\n\nüåü <b>–ù–æ–≤–∞—è –Ω–∏—à–∞ —Å –Ω–∏–∑–∫–æ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–µ–π</b> üòä –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å <b>–µ–∂–µ–¥–Ω–µ–≤–Ω–æ</b> –æ—Ç 3-5 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π —Å–ª–µ–¥—É—è –Ω–∞—à–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_sticker(message.from_user.id, 'CAACAgIAAxkBAAEG-7ljpuwigJpA4_qhNePMhVJGrmfM7AACayMAAulVBRhSEkehcyWEKiwE')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_message(message.from_user.id, '–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ üíµ <b>+13 000‚ÇΩ</b> –∑–∞ 5 –¥–Ω–µ–π')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_message(message.from_user.id, '<b>–ù–∞—à–∏ —É—á–µ–Ω–∏–∫–∏ –≤–∏–¥—è—Ç —Ç–∞–∫–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ, —á–µ–º —Ç—ã —Ö—É–∂–µ?!</b>\n\n–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ üíµ <b>+55 000‚ÇΩ</b> –∑–∞ 30 –¥–Ω–µ–π')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_sticker(message.from_user.id, 'CAACAgIAAxkBAAEG-71jpuyLGy6LOjtd2bTPb2-ds12eTgACCgADFm5MEro4tw8DwKEsLAQ')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_message(message.from_user.id, '<b>–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:</b>\n\n –¥–æ üíµ <b>+235299‚ÇΩ</b>\n\n–ü–æ–∫–∞ –¥—Ä—É–≥–∏–µ –æ —Ç–∞–∫–æ–º —Ç–æ–ª—å–∫–æ –º–µ—á—Ç–∞—é—Ç, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –≤–æ–ø–ª–æ—â–∞—Ç—å —ç—Ç–æ –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å —É–∂–µ —Å–µ–π—á–∞—Å ... üòä', reply_markup=nav.showUrl())
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_sticker(message.from_user.id, 'CAACAgIAAxkBAAEG-8Rjpuz3hSFN5mkKcQN7QLYW3vOgoQACHAADFm5MElhEbAvnYG3ALAQ')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_message(message.from_user.id, '<b>–ù–µ —Å—Ç—Ä–∞—à–Ω–æ, –µ—Å–ª–∏ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ –¥–∞–µ—Ç—Å—è –æ–±—É—á–µ–Ω–∏–µ.</b>\n\n–û–±—É—á–µ–Ω–∏–µ —Å–¥–µ–ª–∞–Ω–æ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º –∏ –ø–æ–Ω—è—Ç–Ω–æ–º —è–∑—ã–∫–µ. –¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –∏ –∫–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ. –î–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –±—É–¥–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω —Å –≤—ã—Ö–æ–¥–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. üöÄ\n\n–ù–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å', reply_markup=nav.showUrl())
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(2)
            await bot.send_sticker(message.from_user.id, 'CAACAgIAAxkBAAEG-8Zjpu1paGKMJySC7l-l_tSTQXX_IgACBAADFm5MEhNueNj6dWTdLAQ')
            await bot.send_chat_action(message.from_user.id, ChatActions.TYPING)
            await asyncio.sleep(3)
            await bot.send_photo(message.from_user.id, img, caption='üéÅ <b>–ê–ö–¶–ò–Ø 2022 –≥–æ–¥–∞ (—Å</b>\nüíØ <b>100 –ì–ê–†–ê–ù–¢–ò–ï–ô —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞)</b>\n\n–¢–≤–æ–π –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ —á–µ—Ä–µ–∑ 1 –¥–µ–Ω—å: üíµ <b>17181‚ÇΩ</b>\n\n–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ –∑–∞ 1‚ÇΩ —Å üíØ <b>–ì–ê–†–ê–ù–¢–ò–ï–ô —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</b>\n\n<b>–ñ–º–∏ üëá</b>', reply_markup=nav.showUrl())

def captch():
  numb_1 = random.randint(1, 10)
  numb_2 = random.randint(1, 10)

  itog = numb_1 + numb_2

  random_numbs = []
  while True:
    if len(random_numbs) == 5:
      break
    n1 = random.randint(1, 10)
    n2 = random.randint(1, 10)
    if n1 + n2 == itog:
      continue
    else:
      random_numbs.append(n1+n2)

  return numb_1, numb_2, itog, random_numbs
